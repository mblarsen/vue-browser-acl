import e from"browser-acl";var t={install:function(t,s,c,u={}){const f="function"==typeof s?s:()=>s,m=Boolean(u.strict),d=Object.assign({acl:{strict:m},aliases:["role"],assumeGlobal:!m,caseMode:!0,debug:!1,directive:"can",failRoute:"/",helper:!0,strict:!1},u),p=n(d);let v=new e(d.acl);"function"==typeof c?c(v):c instanceof e&&(v=c),v.router=function(t){d.router=t;const o=(e,t,...o)=>t&&v.can(f(),e,t,...o)||!t&&!d.strict;t.beforeEach((t,r,n)=>{const a=((t,r,n)=>{let a=null;const i=t.reduce((t,i)=>t.then(t=>{if(!0!==t)return t;"string"==typeof i.fail&&(a=i.fail);const l=p(i),s="function"==typeof l?l(r,n,o):Promise.resolve(o(...(t=>{const[o,r=(d.assumeGlobal?e.GlobalRule:null)]=t.split(" ");return[o,r]})(l)));if(d.strict&&!(s instanceof Promise))throw new Error("$route.meta.can must return a promise in strict mode");return s}).catch(e=>(d.debug&&console.error(e),!1)),Promise.resolve(!0));return i.getFail=()=>a,i})(t.matched.filter(e=>e.meta&&p(e.meta)).map(e=>e.meta),t,r);a.then(e=>{if(!0===e)return n();let o=a.getFail()||d.failRoute;"$from"===o&&(o=r.path),n("function"==typeof o?o(t,r):o)})})},d.router&&v.router(d.router);const b=function(t,n,s){const c=void 0!==(u=n.modifiers).disable?"disable":void 0!==u.readonly?"readonly":"hide";var u;let m,p,b,y;if(p=n.arg,Array.isArray(n.value)&&n.expression.startsWith("[")?[m,b,y]=n.modifiers.global?i(n):a(n):"string"==typeof n.value?[m,b,y]=l(n,s,d):p&&"object"==typeof n.value?(m=p,b=n.value,y=[]):void 0===n.value&&!n.modifiers.global&&d.assumeGlobal&&(m=p,b=e.GlobalRule,y=[]),d.assumeGlobal&&!b&&(b=e.GlobalRule,y=y||[],m=m||p),!m||!b)throw new Error("Missing verb or subject");const h=v[(n.modifiers.some?"some":n.modifiers.every&&"every")||"can"](f(),m,b,...y),g=n.modifiers.not,E=function(e){return!!o.some(t=>e instanceof t)&&e}(t),M=function(e){return!!r.some(t=>e instanceof t)&&e}(t);E&&(E.disabled=!1),M&&(M.readOnly=!1),(h&&g||!h&&!g)&&("hide"===c?function(e,t){const o=document.createComment(" ");Object.defineProperty(o,"setAttribute",{value:()=>{}}),t.text=" ",t.elm=o,t.isComment=!0,t.tag=void 0,t.data=t.data||{},t.data.directives=void 0,t.componentInstance&&(t.componentInstance.$el=o),e.parentNode&&e.parentNode.replaceChild(o,e)}(t,s):"disable"===c&&E?E.disabled=!0:"readonly"===c&&M&&(M.readOnly=!0))};if([d.directive,...d.aliases].forEach(e=>t.directive(e,b)),d.helper){const e="$"+d.directive;t.prototype[e]=function(e,t,...o){return v.can(f(),e,t,...o)},t.prototype[e].not=function(e,t,...o){return!v.can(f(),e,t,...o)},t.prototype[e].every=function(e,t,...o){return v.every(f(),e,t,...o)},t.prototype[e].some=function(e,t,...o){return v.some(f(),e,t,...o)}}}};const o=[HTMLButtonElement,HTMLFieldSetElement,HTMLInputElement,HTMLOptGroupElement,HTMLOptionElement,HTMLSelectElement,HTMLTextAreaElement],r=[HTMLInputElement,HTMLTextAreaElement],n=e=>t=>[e.directive,...e.aliases||[]].map(e=>t[e]).filter(Boolean).shift(),a=({arg:e,value:t})=>[e||t[0],e?t[0]:t[1],t.slice(e?1:2)],i=({arg:t,value:o})=>[t||o[0],e.GlobalRule,t?o:o.slice(1)],l=({arg:e,value:t,modifiers:o},r,n)=>{let[a,i]=e?[e,t]:t.split(" ");if(i&&o.global)throw new Error("You cannot provide subject and use global modifier at the same time");return"string"==typeof i&&n.caseMode&&i[0].match(/[a-z]/)&&"object"==typeof r.context&&(i=r.context.$data[i]),[a,i,[]]};export default t;
//# sourceMappingURL=index.modern.js.map
